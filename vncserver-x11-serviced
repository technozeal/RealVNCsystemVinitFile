#!/bin/sh

# chkconfig: 2345 20 80
# description: VNC Server in Service Mode daemon
# pidfile: /var/run/vncserver-x11-serviced.pid

### BEGIN INIT INFO
# Provides:          vncserver-x11-serviced
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: VNC Server in Service Mode daemon
# Description:       VNC Server in Service Mode daemon
### END INIT INFO

PIDFILE=/var/run/vncserver-x11-serviced.pid
PATH=/bin:/usr/bin
export PATH
[ -r /etc/default/locale ] && . /etc/default/locale 2>/dev/null
export LANG

case $1 in
start)
    vncserver-x11-serviced
    ;;
stop)
    if [ -r "$PIDFILE" ] && ps -p `cat "$PIDFILE"` >/dev/null; then
      kill -TERM `cat $PIDFILE`
    else
      echo "No vncserver-x11-serviced process found to stop"
      exit 7
    fi
    ;;
force-reload|reload)
    if [ -r "$PIDFILE" ] && ps -p `cat "$PIDFILE"` >/dev/null; then
      kill -HUP `cat $PIDFILE`
    else
      echo "No vncserver-x11-serviced process found to reload"
      exit 7
    fi
    ;;
restart)
    $0 stop >/dev/null || true
    i=0
    while [ -r "$PIDFILE" ] && [ $i -lt 5 ]; do
      i=`expr $i + 1`
      sleep 1
    done
    $0 start
    ;;
try-restart)
    if $0 status >/dev/null; then
      $0 restart
    else
      echo "No running vncserver-x11-serviced process; service not started"
    fi
    ;;
status)
    if [ '!' -f "$PIDFILE" ]; then
        echo "vncserver-x11-serviced is not running"
        exit 3
    elif [ '!' -r "$PIDFILE" ]; then
        echo "Status of vncserver-x11-serviced unknown (pidfile not readable)"
        exit 4
    elif ps -p `cat "$PIDFILE" 2>/dev/null` >/dev/null ; then
        echo "vncserver-x11-serviced is running"
        exit 0
    else
        echo "vncserver-x11-serviced not running but pidfile exists"
        exit 1
    fi
    ;;
*)
    echo "Usage: $0 (start|stop|restart|status)"
    exit 1
    ;;
esac

